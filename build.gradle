buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = "https://repo.essential.gg/repository/maven-public" }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id "java"
    id "idea"
    id "maven-publish"
    id "net.minecraftforge.gradle" version "5.1.+"
    id "com.github.johnrengelman.shadow" version "7.1.0"
}

apply plugin: 'org.spongepowered.mixin'

version = "1.0.2"
group = "com.enormouz.mythicprotector"
archivesBaseName = "mythicprotector"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
compileJava.options.encoding = "UTF-8"

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property("devauth.configDir", project.file(".devauth").absolutePath)

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

sourceSets {
    main {
        output.resourcesDir = output.classesDirs.singleFile
    }
}

repositories {
    maven { url = "https://maven.minecraftforge.net" }
    maven { url = "https://files.minecraftforge.net/maven" }
    maven { url = "https://repo.sk1er.club/repository/maven-public" }
    maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

configurations {
    shade
    compile.extendsFrom shade
}

configurations {
    include
    implementation.extendsFrom(include)
}

configurations.configureEach {
    exclude group: "net.minecraftforge", module: "mergetool"
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    embed('org.spongepowered:mixin:0.8.3-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
    }
    annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'
    implementation 'org.spongepowered:mixin:0.8.3-SNAPSHOT'

    include "gg.essential:loader-launchwrapper:1.1.3"
    implementation "gg.essential:essential-1.12.2-forge:12174+g776a77319"
    embed('gg.essential:loader-launchwrapper:1.1.3')

}

mixin {
    add sourceSets.main, "mixins.mythicprotector.refmap.json"
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(
            'FMLCorePlugin': 'com.enormouz.mythicprotector.FMLCorePlugin',
            'FMLCorePluginContainsFMLMod': 'false',
            'ForceLoadAsMod': true,
            'ModSide': 'CLIENT',
            'TweakClass': 'gg.essential.loader.stage0.EssentialSetupTweaker',
            'TweakOrder': '0',
            'MixinConfigs': 'mixins.mythicprotector.json'
    )

    enabled = false
}

shadowJar {
    archiveFileName = jar.archiveFileName
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    configurations = [project.configurations.include]
}

processResources {
    inputs.property "description", "Prevent closing chests with Mythics for Wynncraft!"
    inputs.property "version", project.version
    inputs.property "mcversion", "1.12.2"

    filesMatching("mcmod.info") {
        expand "version": project.version, "description": "Prevent closing chests with Mythics for Wynncraft!", "mcversion": "1.12.2"
    }
}

reobf {
    shadowJar {}
}

jar.dependsOn("shadowJar")
